'''
특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠르게 동작하는 정렬 알고리즘입니다.
- 계수 정렬은 데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때 사용 가능합니다.
데이터의 개수가 N, 데이터(양수) 중 최댓값이 K일 때 최악의 경우에도 수행 시간 O(N+K)를 보장합니다.(공간 복잡도 O(N+K))

가장 작은 데이터부터 가장 큰 데이터까지의 범위가 모두 담길 수 있는 리스트를 생성합니다.
데이터를 하나씩 확인하며 데이터의 값과 동일한 인덱스의 데이터를 1씩 증가시킨다.
결과적으로 최종 리스트에는 각 데이터가 몇 번 씩 등장했는지 그 횟수가 기록됩니다.
결과를 확인할 때는 리스트의 첫 번째 데이터부터 하나씩 그 값만큼 반복하여 인덱스를 출력합니다.

계수 정렬은 때에 따라서 심각한 비효율성을 초래할 수 있습니다.
- 데이터가 0과 999,999로 단 2개만 존재하는 경우
계수 정렬은 동일한 값을 가지는 데이터가 여러 개 등장할 때 효과적으로 사용할 수 있습니다.
- 성적의 경우 100점을 맞은 학생이 여러 명일 수 있기 때문에 계수 정렬이 효과적입니다.
'''

nums = [4,7,3,3,2,7,8,9,9,1,2,1,5]
def counting_sort():
    count = [0]*(max(nums)+1)
    for i in range(len(nums)):
        count[nums[i]] += 1
    for i in range(len(count)):
        for j in range(count[i]):
            print(i, end = ' ') # 띄어쓰기를 구분으로 등장한 횟수만큼 인덱스 출력
